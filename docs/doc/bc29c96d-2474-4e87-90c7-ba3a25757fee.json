{
    "summary": "The code offers a frequency computation method for countries in text using seven approaches, utilizing 'countries.csv' as input, and allows for custom samples, budgets, and directory creation with log files.",
    "details": [
        {
            "comment": "This code provides a use case for computing the frequencies of occurring countries in a long passage of text using seven different approaches including IO, Chain-of-Thought (CoT), Tree of Thought (ToT) with variations, and Graph of Thoughts (GoT) with variations. It uses an input file named 'countries.csv' and provides a data generator for additional or different samples. The code to execute the use case is called 'keyword_counting.py'.",
            "location": "\"/media/root/Toshiba XG3/works/graph-of-thoughts/docs/src/examples/keyword_counting/README.md\":0-25",
            "content": "# Keyword Counting\nThe use case in this directory computes the frequencies of occurring countries \nin a long passage of text. We provide implementations of seven different approaches:\n- IO\n- Chain-of-Thought (CoT)\n- Tree of Thought (ToT):\n  - ToT: wider tree, meaning more branches per level\n  - ToT2: tree with more levels, but fewer branches per level\n- Graph of Thoughts (GoT):\n  - GoT4: split passage into 4 sub-passages\n  - GoT8: split passage into 8 sub-passages\n  - GoTx: split by sentences\n## Data\nWe provide an input file with 100 samples: `countries.csv`. It is also possible to use\nthe data generator `dataset_gen_countries.py` to generate additional or\ndifferent samples (using GPT-4). The parameters can be updated on line 54 (number of samples to be generated). \nNote that not every generated sample will be included in the dataset, as each sample is \nadditionally tested for validity (observe script output for details).\n## Execution\nThe file to execute the use case is called\n`keyword_counting.py`. In the main body, one can"
        },
        {
            "comment": "The code selects specific samples, approaches, and sets a budget for running Python scripts. It creates directories for each run with `config.json` and `log.log` files containing LLM prompts/responses and GRS data for samples. Change the results directory in line 150 of `plot.py` to plot data by running `python3 plot.py`.",
            "location": "\"/media/root/Toshiba XG3/works/graph-of-thoughts/docs/src/examples/keyword_counting/README.md\":26-44",
            "content": "select the specific samples to be run (variable samples) and the\napproaches (variable approaches). It is also possible to set a budget in\ndollars (variable budget).\nThe Python scripts will create the directory `result`, if it is not\nalready present. In the `result` directory, another directory is created\nfor each run: `{name of LLM}_{list of approaches}_{day}_{start time}`.\nInside each execution specific directory two files (`config.json`,\n`log.log`) and a separate directory for each selected approach are\ncreated. `config.json` contains the configuration of the run: input data,\nselected approaches, name of the LLM, and the budget. `log.log` contains\nthe prompts and responses of the LLM as well as additional debug data.\nThe approach directories contain a separate json file for every sample\nand the file contains the Graph Reasoning State (GRS) for that sample.\n## Plot Data\nChange the results directory in line 150 of `plot.py` and run `python3\nplot.py` to plot your data."
        }
    ]
}